version: 2.1

parameters:
  check-legacy-node-version:
    type: boolean
    default: false
  active-node-version:
    type: string
    default: '18.17'
  current-node-version:
    type: string
    default: '20.5'

aliases:
  - &restore-cache
    restore_cache:
      key: dependency-cache-{{ checksum "pnpm-lock.yaml" }}
  - &save-cache
    save_cache:
      key: dependency-cache-{{ checksum "pnpm-lock.yaml" }}
      paths:
        - ./node_modules
  - &install-deps
    run:
      name: Install dependencies
      command: pnpm install --frozen-lockfile
  - &build-packages
    run:
      name: Build
      command: pnpm run build
  - &run-unit-tests
    run:
      name: Test
      command: pnpm run test

jobs:
  build:
    working_directory: ~/cmmv
    docker:
      - image: cimg/node:<< pipeline.parameters.active-node-version >>
    steps:
      - checkout
      - run:
          name: Install pnpm
          command: 'sudo npm install -g pnpm'
      - *restore-cache
      - *install-deps
      - *save-cache
      - *build-packages

  test:
    parameters:
      node-version:
        type: string
    working_directory: ~/cmmv
    docker:
      - image: cimg/node:<< parameters.node-version >>
    steps:
      - when:
          condition:
            and:
              - equal:
                  [
                    '<< parameters.node-version >>',
                    '<< pipeline.parameters.active-node-version >>',
                  ]
              - not: << pipeline.parameters.check-legacy-node-version >>
          steps:
            - run:
                name: Skip
                command: |
                  echo Skipping
      - when:
          condition:
            or:
              - not:
                  equal:
                    [
                      '<< parameters.node-version >>',
                      '<< pipeline.parameters.active-node-version >>',
                    ]
              - << pipeline.parameters.check-legacy-node-version >>
          steps:
            - checkout
            - run:
                name: Install pnpm
                command: 'sudo npm install -g pnpm'
            - *restore-cache
            - *install-deps
            - *build-packages
            - when:
                condition:
                  equal:
                    [
                      '<< parameters.node-version >>',
                      '<< pipeline.parameters.active-node-version >>',
                    ]
                steps:
                  - run:
                      name: Test (coverage)
                      command: pnpm run test:cov
                  - run:
                      name: Collect coverage
                      command: pnpm run coverage
                  - store_artifacts:
                      path: coverage
            - when:
                condition:
                  not:
                    equal:
                      [
                        '<< parameters.node-version >>',
                        '<< pipeline.parameters.active-node-version >>',
                      ]
                steps:
                  - *run-unit-tests

  lint:
    working_directory: ~/cmmv
    docker:
      - image: cimg/node:<< pipeline.parameters.active-node-version >>
    steps:
      - checkout
      - run:
          name: Install pnpm
          command: 'sudo npm install -g pnpm'
      - *restore-cache
      - *install-deps
      - run:
          name: Lint
          command: pnpm run lint

  integration_tests:
    working_directory: ~/cmmv
    machine: true
    steps:
      - checkout
      - run:
          name: Prepare nvm
          command: |
            echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
            echo ' [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
      - run:
          name: Upgrade Node.js
          command: |
            nvm install << pipeline.parameters.active-node-version >>
            node -v
            nvm alias default << pipeline.parameters.active-node-version >>
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
          name: Install pnpm
          command: 'sudo npm install -g pnpm'
      - *install-deps
      - run:
          name: Prepare tests
          command: |
            bash ./scripts/prepare.sh
            sleep 10
      - run:
          name: List containers
          command: docker ps
      - run:
          name: Integration tests
          command: pnpm run test:integration

workflows:
  build-and-test:
    jobs:
      - build
      - test:
          requires:
            - build
          matrix:
            parameters:
              node-version:
                [
                  '<< pipeline.parameters.active-node-version >>',
                  '<< pipeline.parameters.current-node-version >>',
                ]
      - lint:
          requires:
            - build
